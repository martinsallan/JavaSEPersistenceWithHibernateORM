/*
 * Copyright (C) 2025 iagor
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package io.github.guisso.javasepersistencewithhibernateorm.beta.usuario.GUI;

import io.github.guisso.javasepersistencewithhibernateorm.beta.usuario.UsuarioService;
import javax.swing.JOptionPane;

/**
 *
 * @author iagor
 */
public class UsuarioGUI extends javax.swing.JFrame {

    /**
     * Creates new form UsuarioGUI
     */
    public UsuarioGUI() {
        initComponents();
        
        // cria um listener genérico que chama o método de atualização
        javax.swing.event.DocumentListener listener = new javax.swing.event.DocumentListener(){
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e){
                atualizarEstadoBotoes();
            }
            
            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e){
                atualizarEstadoBotoes();
            }
            
            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e){
                atualizarEstadoBotoes();
            }
            
        };

        // Adiciona o mesmo listener a todos os campos de texto
        txtNome.getDocument().addDocumentListener(listener);
        txtLogin.getDocument().addDocumentListener(listener);
        txtSenha.getDocument().addDocumentListener(listener);
        
        // chama o metodo uma vez no inicio para definir o estado inicial dos botoes
        atualizarEstadoBotoes();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblLogin = new javax.swing.JLabel();
        txtLogin = new javax.swing.JTextField();
        lblSenha = new javax.swing.JLabel();
        txtSenha = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        bttCadastrar = new javax.swing.JButton();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Usuario");
        setResizable(false);

        lblLogin.setText("Login");

        txtLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLoginActionPerformed(evt);
            }
        });

        lblSenha.setText("Senha");

        jButton1.setText("Entrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bttCadastrar.setText("Cadastrar");
        bttCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttCadastrarActionPerformed(evt);
            }
        });

        lblNome.setText("Nome");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bttCadastrar)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblNome)
                        .addComponent(lblSenha)
                        .addComponent(lblLogin)
                        .addComponent(txtLogin)
                        .addComponent(txtSenha)
                        .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(lblSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(bttCadastrar))
                .addContainerGap())
        );

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/guisso/javasepersistencewithhibernateorm/beta/usuario/GUI/Untitled-1.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(jLabel3)
                .addContainerGap(137, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLoginActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String login = txtLogin.getText();
        String senha = new String(txtSenha.getPassword());
        
        if(login.trim().isEmpty() || senha.trim().isEmpty()){
            JOptionPane.showMessageDialog(this,
                    "Por favor, preencha os campos de login e senha.",
                    "Campos Vazios",JOptionPane.WARNING_MESSAGE);
            return; // interrompe a execução do método
        }
        
        // 3: Chamar a camada de serviço para autenticar
        try {
            UsuarioService usuarioService = new UsuarioService();
            boolean autenticado = usuarioService.autenticarUsuario(login, senha);
            
            // 4: Tratar o resultado
            if(autenticado){
                JOptionPane.showMessageDialog(this,
                        "Login realizado com sucesso!",
                        "Bem-vindo", JOptionPane.INFORMATION_MESSAGE);
                
                // AQUI SERÁ A LÓGICA POR TRÁS DA MUDANÇA DE TELA
                // Ex.:
                // Telaprincipal telaprincipal = new Telaprincipal();
                // telaprincipal.setvisible(true);
                // this.dispose(); // fecha a tela de login
            }else{
                JOptionPane.showMessageDialog(this,
                        "Login ou senha inválidos.",
                        "Erro na Autenticação",
                        JOptionPane.ERROR_MESSAGE);
            }
        }catch(Exception e){
            // captura qualquer outro erro que possa acontecer (ex. Problema de conexão)
            JOptionPane.showMessageDialog(this,
                    "Ocorreu um erro inesperado: "+e.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        
            e.printStackTrace(); // imprime o erro no console
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bttCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttCadastrarActionPerformed
        
        // Obter dados
        String nome = txtNome.getText();
        String login = txtLogin.getText();
        String senha = new String(txtSenha.getPassword());
        
        // validar a entrada
        if(nome.trim().isEmpty() || login.trim().isEmpty() || senha.trim().isEmpty()){
            JOptionPane.showMessageDialog(this,
                    "Todos os campos (Nome,Login,Senha) são obrigatórios.",
                    "Campos Vazios",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // chamar a camada de serviço e tratar erros
        try{
            // instancia de usarioservice
            UsuarioService usuarioService = new UsuarioService();
            
            // chama o método que contém a lógica de criar o user e criptografar senha
            usuarioService.cadastrarUsuario(nome, login, senha);
            
            // se o método não lançar exceção, o cadastro deu certo
            JOptionPane.showMessageDialog(this,
                    "Usuario '" +nome+ "' cadastrado com sucesso!",
                    "Sucesso",
                    JOptionPane.INFORMATION_MESSAGE);
            
            // limpa a textbox depois do cadastro
            limparCamposDeCadastro();
            
        } catch(IllegalArgumentException e){
            JOptionPane.showMessageDialog(this,
                    "Erro de validadação: " +e.getMessage(),
                    "Dados Inválidos",
                    JOptionPane.ERROR_MESSAGE);
        } catch(Exception e){
            JOptionPane.showMessageDialog(this,
                    "Não foi possível realizar o cadastro: " +e.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
            e.printStackTrace(); // imprime o erro no console
        }
        
    }//GEN-LAST:event_bttCadastrarActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsuarioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsuarioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsuarioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsuarioGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UsuarioGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttCadastrar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblSenha;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JTextField txtNome;
    private javax.swing.JPasswordField txtSenha;
    // End of variables declaration//GEN-END:variables

    private void limparCamposDeCadastro() {
        txtNome.setText("");
        txtLogin.setText("");
        txtSenha.setText("");
    }
    
    private void atualizarEstadoBotoes(){
        
        String nome = txtNome.getText().trim();
        String login = txtLogin.getText().trim();
        
        boolean senhaPreenchida = txtSenha.getPassword().length > 0;
        
        // logica para habilitar botao Entrar
        boolean podeEntrar = !login.isEmpty() && senhaPreenchida && nome.isEmpty();
        jButton1.setEnabled(podeEntrar);
        
        // Logica para habilitar botar Cadastro
        boolean podeCadastrar = !nome.isEmpty() && !login.isEmpty() && senhaPreenchida;
        bttCadastrar.setEnabled(podeCadastrar);
    }
}
