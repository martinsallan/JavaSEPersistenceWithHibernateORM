/*
 * Copyright (C) 2025 iagor
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package io.github.guisso.javasepersistencewithhibernateorm.beta.cliente.GUI;

import io.github.guisso.javasepersistencewithhibernateorm.beta.cliente.Cliente;
import io.github.guisso.javasepersistencewithhibernateorm.beta.cliente.ClienteRepository;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author iagor
 */
public class exibirCliente extends javax.swing.JFrame {

    /**
     * Creates new form exibirCliente
     */
    
    private ClienteRepository clienteRepository;
    private ClienteTableModel regularesTableModel;
    private ClienteTableModel lixeiraTableModel;
    private Cliente clienteSelecionado;
    
    
    private void inicializarComponentesLogicos() {
        // Inicializa os componentes 
        this.clienteRepository = new ClienteRepository();

        // Cria e configura os TableModels
        // Jtable 1 ´é regulares - Jtable 2 é lixeira
        this.regularesTableModel = new ClienteTableModel();
        this.jTable1.setModel(regularesTableModel); 
        
        this.lixeiraTableModel = new ClienteTableModel();
        this.jTable2.setModel(lixeiraTableModel); 
        
        // Carrega os dados do banco de dados
        carregarTabelas();

        // Adiciona o listener para cliques na tabela de ativos
        adicionarListenerSelecaoTabela();
    }

    private void carregarTabelas() {
        // Busca os dados e atualiza os modelos das tabelas
        // Precisamos de um findAllActive() no repositório
        List<Cliente> ativos = clienteRepository.findAllActive(); // Você precisará criar este método
        regularesTableModel.setClientes(ativos);

        List<Cliente> excluidos = clienteRepository.findALLInTrash();
        lixeiraTableModel.setClientes(excluidos);
    }

    private void adicionarListenerSelecaoTabela() {
        jTable1.getSelectionModel().addListSelectionListener(event -> {
            if (!event.getValueIsAdjusting() && jTable1.getSelectedRow() != -1) {
                int modelRow = jTable1.convertRowIndexToModel(jTable1.getSelectedRow());
                clienteSelecionado = regularesTableModel.getClienteEm(modelRow);
                preencherFormulario(clienteSelecionado);
            }
        });
    }
    
    
    private void preencherFormulario(Cliente cliente) {
        if (cliente != null) {
            txt_Nome.setText(cliente.getNome());
            txt_Endereco.setText(cliente.getEndereco());
            txt_Contato.setText(cliente.getContato());
            chk_Ativo.setSelected(cliente.getAtivo() != null && cliente.getAtivo());
        }
    }
    
    private void limparFormulario() {
        clienteSelecionado = null;
        txt_Nome.setText("");
        txt_Endereco.setText("");
        txt_Contato.setText("");
        chk_Ativo.setSelected(false);
        jTable1.clearSelection();
    }
    
    public exibirCliente() {
        initComponents();
        
        inicializarComponentesLogicos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Cadastro_pnl = new javax.swing.JPanel();
        lbl_Nome = new javax.swing.JLabel();
        txt_Nome = new javax.swing.JTextField();
        lbl_Contato = new javax.swing.JLabel();
        txt_Contato = new javax.swing.JTextField();
        lbl_Endereco = new javax.swing.JLabel();
        txt_Endereco = new javax.swing.JTextField();
        chk_Ativo = new javax.swing.JCheckBox();
        btn_Salvar = new javax.swing.JButton();
        btn_Buscar = new javax.swing.JButton();
        Listagem_pnl = new javax.swing.JPanel();
        Listagem_tbd = new javax.swing.JTabbedPane();
        Resultados_pnl = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btn_Deletar = new javax.swing.JButton();
        btn_Alterar = new javax.swing.JButton();
        Lixeira_pnl = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btn_DeletarPermanente = new javax.swing.JButton();
        btn_Restaurar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_Nome.setText("Nome");

        lbl_Contato.setText("Contato");

        lbl_Endereco.setText("Endereço");

        chk_Ativo.setText("Ativo");

        btn_Salvar.setText("Salvar");
        btn_Salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SalvarActionPerformed(evt);
            }
        });

        btn_Buscar.setText("Buscar");
        btn_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Cadastro_pnlLayout = new javax.swing.GroupLayout(Cadastro_pnl);
        Cadastro_pnl.setLayout(Cadastro_pnlLayout);
        Cadastro_pnlLayout.setHorizontalGroup(
            Cadastro_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Cadastro_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Cadastro_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_Nome)
                    .addComponent(lbl_Contato)
                    .addComponent(lbl_Endereco)
                    .addComponent(chk_Ativo)
                    .addGroup(Cadastro_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(Cadastro_pnlLayout.createSequentialGroup()
                            .addComponent(btn_Buscar)
                            .addGap(18, 18, 18)
                            .addComponent(btn_Salvar))
                        .addGroup(Cadastro_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txt_Endereco, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
                            .addComponent(txt_Contato, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_Nome, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        Cadastro_pnlLayout.setVerticalGroup(
            Cadastro_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Cadastro_pnlLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lbl_Nome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_Nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lbl_Contato)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_Contato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lbl_Endereco, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_Endereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(chk_Ativo)
                .addGap(105, 105, 105)
                .addGroup(Cadastro_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Salvar)
                    .addComponent(btn_Buscar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btn_Deletar.setText("Deletar");
        btn_Deletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeletarActionPerformed(evt);
            }
        });

        btn_Alterar.setText("Alterar");
        btn_Alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AlterarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Resultados_pnlLayout = new javax.swing.GroupLayout(Resultados_pnl);
        Resultados_pnl.setLayout(Resultados_pnlLayout);
        Resultados_pnlLayout.setHorizontalGroup(
            Resultados_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Resultados_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Resultados_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Resultados_pnlLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_Alterar)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Deletar)))
                .addContainerGap())
        );
        Resultados_pnlLayout.setVerticalGroup(
            Resultados_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Resultados_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Resultados_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Deletar)
                    .addComponent(btn_Alterar))
                .addContainerGap(134, Short.MAX_VALUE))
        );

        Listagem_tbd.addTab("Regulares", Resultados_pnl);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        btn_DeletarPermanente.setText("Deletar");
        btn_DeletarPermanente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeletarPermanenteActionPerformed(evt);
            }
        });

        btn_Restaurar.setText("Restaurar");
        btn_Restaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RestaurarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Lixeira_pnlLayout = new javax.swing.GroupLayout(Lixeira_pnl);
        Lixeira_pnl.setLayout(Lixeira_pnlLayout);
        Lixeira_pnlLayout.setHorizontalGroup(
            Lixeira_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Lixeira_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Lixeira_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Lixeira_pnlLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_Restaurar)
                        .addGap(18, 18, 18)
                        .addComponent(btn_DeletarPermanente)))
                .addContainerGap())
        );
        Lixeira_pnlLayout.setVerticalGroup(
            Lixeira_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Lixeira_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Lixeira_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_DeletarPermanente)
                    .addComponent(btn_Restaurar))
                .addContainerGap(134, Short.MAX_VALUE))
        );

        Listagem_tbd.addTab("Lixeira", Lixeira_pnl);

        javax.swing.GroupLayout Listagem_pnlLayout = new javax.swing.GroupLayout(Listagem_pnl);
        Listagem_pnl.setLayout(Listagem_pnlLayout);
        Listagem_pnlLayout.setHorizontalGroup(
            Listagem_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Listagem_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Listagem_tbd)
                .addContainerGap())
        );
        Listagem_pnlLayout.setVerticalGroup(
            Listagem_pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Listagem_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Listagem_tbd)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Cadastro_pnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(Listagem_pnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Listagem_pnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Cadastro_pnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // LÓGIGA DOS BOTÕES
    
    // BOTÕES DA GUI FIXA
    // Botão de busca - gui fixa 
    private void btn_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BuscarActionPerformed
        String nomeBusca = txt_Nome.getText().trim();
        if (!nomeBusca.isEmpty()) {
            List<Cliente> resultados = clienteRepository.findByNome(nomeBusca); // Você precisará criar este método
            regularesTableModel.setClientes(resultados);
        } else {
            JOptionPane.showMessageDialog(this, "Digite um nome para buscar.");
        }
    }//GEN-LAST:event_btn_BuscarActionPerformed

    // Botão Salvar - gui fixa
    private void btn_SalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SalvarActionPerformed
        try {
            String nome = txt_Nome.getText();
            String endereco = txt_Endereco.getText();
            String contato = txt_Contato.getText();

            if (nome.trim().isEmpty() || endereco.trim().isEmpty() || contato.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nome, Endereço e Contato são obrigatórios.", "Campos Vazios", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Se clienteSelecionado é nulo, é um novo cadastro. Senão, é uma atualização.
            Cliente cliente = (clienteSelecionado == null) ? new Cliente() : clienteSelecionado;

            cliente.setNome(nome);
            cliente.setEndereco(endereco);
            cliente.setContato(contato);
            cliente.setAtivo(chk_Ativo.isSelected());

            clienteRepository.saveOrUpdate(cliente);

            JOptionPane.showMessageDialog(this, "Cliente salvo com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);

            limparFormulario();
            carregarTabelas();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao salvar cliente: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_SalvarActionPerformed

    // MÉTODOS PARA BOTÕES DAS TABELAS REGULARES E LIXEIRA 
   // Botão alterar - tabela regulares 
    private void btn_AlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AlterarActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um cliente na tabela para alterar.");
            return;
        }
        int modelRow = jTable1.convertRowIndexToModel(selectedRow);
        clienteSelecionado = regularesTableModel.getClienteEm(modelRow);
        preencherFormulario(clienteSelecionado);
    }//GEN-LAST:event_btn_AlterarActionPerformed

    // Botão Deletar - tabela regulares
    private void btn_DeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeletarActionPerformed
        int[] selectedRows = jTable1.getSelectedRows();
        if (selectedRows.length == 0) {
            JOptionPane.showMessageDialog(this, "Selecione um ou mais clientes para apagar.");
            return;
        }

        int resposta = JOptionPane.showConfirmDialog(this, "Deseja mover " + selectedRows.length + " cliente(s) para a lixeira?", "Confirmação", JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            for (int row : selectedRows) {
                Long id = (Long) jTable1.getValueAt(row, 0); // Pega o ID da coluna 0
                clienteRepository.softDelete(id);
            }
            carregarTabelas();
            limparFormulario();
        }
    }//GEN-LAST:event_btn_DeletarActionPerformed

    // Botão Restaurar - tabela lixeira
    private void btn_RestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RestaurarActionPerformed
        int[] selectedRows = jTable2.getSelectedRows();
        if (selectedRows.length == 0) {
            JOptionPane.showMessageDialog(this, "Selecione um ou mais clientes para restaurar.");
            return;
        }

        for (int row : selectedRows) {
            Long id = (Long) jTable2.getValueAt(row, 0);
            clienteRepository.restore(id);
        }
        carregarTabelas();
    }//GEN-LAST:event_btn_RestaurarActionPerformed

    // Botão Deletar - tabela lixeira, deleção permanente
    private void btn_DeletarPermanenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeletarPermanenteActionPerformed
        int[] selectedRows = jTable2.getSelectedRows();
        if (selectedRows.length == 0) {
            JOptionPane.showMessageDialog(this, "Selecione um ou mais clientes para excluir.");
            return;
        }

        int resposta = JOptionPane.showConfirmDialog(this, "Excluir permanentemente " + selectedRows.length + " cliente(s)?", "Confirmação", JOptionPane.WARNING_MESSAGE);
        if (resposta == JOptionPane.YES_OPTION) {
            for (int row : selectedRows) {
                Long id = (Long) jTable2.getValueAt(row, 0);
                clienteRepository.hardDelete(id);
            }
            carregarTabelas();
        }
    }//GEN-LAST:event_btn_DeletarPermanenteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(exibirCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(exibirCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(exibirCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(exibirCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new exibirCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Cadastro_pnl;
    private javax.swing.JPanel Listagem_pnl;
    private javax.swing.JTabbedPane Listagem_tbd;
    private javax.swing.JPanel Lixeira_pnl;
    private javax.swing.JPanel Resultados_pnl;
    private javax.swing.JButton btn_Alterar;
    private javax.swing.JButton btn_Buscar;
    private javax.swing.JButton btn_Deletar;
    private javax.swing.JButton btn_DeletarPermanente;
    private javax.swing.JButton btn_Restaurar;
    private javax.swing.JButton btn_Salvar;
    private javax.swing.JCheckBox chk_Ativo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lbl_Contato;
    private javax.swing.JLabel lbl_Endereco;
    private javax.swing.JLabel lbl_Nome;
    private javax.swing.JTextField txt_Contato;
    private javax.swing.JTextField txt_Endereco;
    private javax.swing.JTextField txt_Nome;
    // End of variables declaration//GEN-END:variables
}
